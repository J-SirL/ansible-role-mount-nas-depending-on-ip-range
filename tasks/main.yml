# tasks/main.yml
- name: Find existing NetworkManager dispatcher scripts
  ansible.builtin.find:
    paths: /etc/NetworkManager/dispatcher.d/
    patterns: '99-trigger-nas-mount*'
  register: found_dispatcher_scripts

- name: Remove found NetworkManager dispatcher scripts
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: absent
  loop: "{{ found_dispatcher_scripts.files }}"
  when: found_dispatcher_scripts.matched > 0

- name: Remove existing NAS mount script
  ansible.builtin.file:
    path: "{{ script_path }}"
    state: absent

- name: Disable existing NAS mount service
  ansible.builtin.systemd:
    name: "{{ service_name }}"
    enabled: no
    state: stopped
  failed_when: false
  ignore_errors: true
# removed due to bad coding- name: Remove existing systemd service file
# removed due to bad coding  ansible.builtin.file:
# removed due to bad coding    path: "/etc/systemd/system/{{ service_name }}.service"
# removed due to bad coding    state: absent

#- name: Remove existing NetworkManager dispatcher script
#  ansible.builtin.file:
#    path: "{{ network_dispatcher_script }}"
#    state: absent

- name: Reload systemd to apply changes
  ansible.builtin.systemd:
    daemon_reload: yes



# Following tasks to upload new scripts and configurations

- name: Upload NAS mount script
  ansible.builtin.template:
    src: mount_nas_check_type.sh.j2
    dest: "{{ script_path }}"
    mode: '0755'

- name: Create a systemd service file for the script
  ansible.builtin.template:
    src: nas_mount_service.j2
    dest: "/etc/systemd/system/{{ service_name }}.service"
    mode: '0644'
  notify:
    - Reload systemd
    - Start nas_mount service

- name: Create NetworkManager dispatcher script to trigger the service
  ansible.builtin.template:
    src: network_dispatcher_script.j2
    dest: "{{ network_dispatcher_script }}"
    mode: '0755'
  notify:
    - Reload NetworkManager
